<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.7/dist/tailwind.min.css">
    <title>Listas de Tareas</title>
</head>

<body class="bg-gray-100 flex items-center justify-center flex-col mc-auto">
    <div class="mr-auto mt-4 ml-4">
        <a href="all-tasks_view" class="bg-blue-300 text-white px-4 py-2 rounded hover:bg-blue-500">
            Volver atrás
        </a>
    </div>
    <h2 class="text-5xl font-bold text-black mb-4 mt-10 text-center">Gestiona tus listas</h2>

    <table class="w-full border-collapse border border-blue-200 mb-4">
        <thead>
            <tr class="bg-gray-100">
                <th class="py-2 px-4">Tarea</th>
                <th class="py-2 px-4 text-left">Estado</th>
            </tr>
        </thead>
        <tbody id="tasksTableBody">
            <?php
            $TaskController = new TaskController();
            $arrayTasks = $TaskController->allTasks_ViewAction();
            if ($arrayTasks !== null) :
                foreach ($arrayTasks as $task) : ?>
                    <tr>
                        <td class="text-center"><?php echo $task['taskName'] ?></td>
                        <td class="text-left"><?php echo $task['taskStatus'] ?></td>
                    </tr>
            <?php endforeach;
            endif; ?>
        </tbody>
    </table>

    <div id="tablesContainer" class="mb-4 flex flex-wrap justify-around w-3/4"></div>

    <div class="mb-4 text-center">
        <button onclick="addTable()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-300">
            Agregar lista
        </button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () { //cargar las tablas una vez que la página está completamente cargada
            loadTablesFromLocalStorage();
        });

        window.addEventListener('beforeunload', function () { //permite guardar las tablas antes de que el usuario abandone la página
            saveTablesToLocalStorage();
        });

        function saveTablesToLocalStorage() { //guarda el contenido las tablas en localStorage
            const tablesHTML = document.getElementById('tablesContainer').innerHTML;
            localStorage.setItem('tablesHTML', tablesHTML);
        }

        function loadTablesFromLocalStorage() { //carga el contenido del localStorage y lo muestra
            const tablesHTML = localStorage.getItem('tablesHTML');
            if (tablesHTML) {
                document.getElementById('tablesContainer').innerHTML = tablesHTML;
            }
            // Restaurar los valores seleccionados en los selects
            const selects = document.querySelectorAll('.taskContent');
            selects.forEach(select => {
                const savedValue = localStorage.getItem(select.id);
                if (savedValue) {
                    select.value = savedValue;
                }
            });
        }

        let tableCounter = 0;

        function addTable() { //para añadir una tabla nueva
            tableCounter++;

            const newTable = document.createElement('table');
            newTable.className = 'border-collapse w-64 text-center mb-4';

            newTable.innerHTML = `
                <thead>
                    <tr>
                    <th class="border border-gray-400 p-2 relative" id="listTitle${tableCounter}" colspan="3" contenteditable="true">Título de la lista

                            <button onclick="removeTable(${tableCounter})" class="bg-gray-500 text-white px-2 py-1 rounded hover:bg-red-300 absolute top-0 right-0 mt-1 mr-1">
                                -
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="border border-gray-400 p-2 relative">
                            <button onclick="addRow(${tableCounter})" class="bg-blue-300 text-white px-2 py-1 rounded hover:bg-green-300 absolute top-0 left-0 mt-1 ml-1">
                                +
                            </button>
                            <select class="taskContent bg-gray-100" name="taskContent[]" id="taskContent${tableCounter}">
                                <?php if (!empty($arrayTasks)) : ?>
                                    <?php foreach ($arrayTasks as $task) : ?>
                                        <option value="<?php echo $task['taskName']; ?>"><?php echo $task['taskName']; ?></option>
                                    <?php endforeach; ?>
                                <?php endif; ?>
                            </select>
                            <button onclick="removeCell(this)" class="absolute top-0 right-0 bg-gray-500 text-white px-2 py-1 rounded hover:bg-red-300 mt-1 mr-1">
                                -
                            </button>
                        </td>
                    </tr>
                </tbody>
            `;

            document.getElementById('tablesContainer').appendChild(newTable);
            document.getElementById('tablesContainer').classList.add('flex-wrap');
            saveTablesToLocalStorage();
        }

        function addRow(tableId) { //añadir una fila nueva en la tabla
            const table = document.getElementById(`listTitle${tableId}`).closest('table');

            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td class="border border-gray-400 p-2 relative">
                    <select class="taskContent bg-gray-100" name="taskContent[]" id="taskContent${tableId}_1">
                        <?php if (!empty($arrayTasks)) : ?>
                            <?php foreach ($arrayTasks as $task) : ?>
                                <option value="<?php echo $task['taskName']; ?>"><?php echo $task['taskName']; ?></option>
                            <?php endforeach; ?>
                        <?php endif; ?>
                    </select>
                    <button onclick="removeCell(this)" class="absolute top-0 right-0 bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-300 mt-1 mr-1">
                        -
                    </button>
                </td>
            `;

            table.querySelector('tbody').appendChild(newRow);
            saveTablesToLocalStorage();
        }

        function removeTable(tableId) { //eliminar una tabla 
            const tablesContainer = document.getElementById('tablesContainer');
            const tableToRemove = document.getElementById(`listTitle${tableId}`).closest('table');
            if (tableToRemove) {
                tablesContainer.removeChild(tableToRemove);
            }
            saveTablesToLocalStorage();
        }

        function removeCell(button) { //eliminar una celda
            const cellToRemove = button.closest('td');
            cellToRemove.remove();
            saveTablesToLocalStorage();
        }

        // Actualizar el valor seleccionado en el localStorage cuando cambia el select
        document.addEventListener('change', function (event) {
            if (event.target.classList.contains('taskContent')) {
                const select = event.target;
                localStorage.setItem(select.id, select.value);
            }
        });
    </script>

</body>

</html>